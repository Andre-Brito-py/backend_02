generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  login     String   @unique
  email     String?
  password  String
  role      String   @default("CAIXA")
  sales     Sale[]
  createdAt DateTime @default(now())
}

model Product {
  id        Int        @id @default(autoincrement())
  name      String
  price     Decimal
  category  String?
  stock     Int         @default(0)
  variablePrice Boolean @default(false)
  suspended Boolean     @default(false)
  saleItems SaleItem[]
  additionalCategories ProductAdditionalCategory[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
}

model PaymentMethod {
  id    Int    @id @default(autoincrement())
  name  String @unique
  sales Sale[]
}

model Sale {
  id               Int           @id @default(autoincrement())
  total            Decimal
  paymentMethodId  Int
  paymentMethod    PaymentMethod  @relation(fields: [paymentMethodId], references: [id])
  userId           Int
  user             User           @relation(fields: [userId], references: [id])
  createdAt        DateTime       @default(now())
  items            SaleItem[]
}

model SaleItem {
  id         Int     @id @default(autoincrement())
  saleId     Int
  sale       Sale    @relation(fields: [saleId], references: [id])
  productId  Int
  product    Product @relation(fields: [productId], references: [id])
  quantity   Int
  unitPrice  Decimal
  isDelivery Boolean @default(false)
  additionals SaleItemAdditional[]
}

model AdditionalCategory {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  description String?
  additionals Additional[]
  products    ProductAdditionalCategory[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Additional {
  id                 Int                    @id @default(autoincrement())
  name               String
  price              Decimal
  categoryId         Int
  category           AdditionalCategory     @relation(fields: [categoryId], references: [id])
  suspended          Boolean                @default(false)
  saleItemAdditionals SaleItemAdditional[]
  createdAt          DateTime               @default(now())
  updatedAt          DateTime               @updatedAt
}

model ProductAdditionalCategory {
  id                    Int                @id @default(autoincrement())
  productId             Int
  product               Product            @relation(fields: [productId], references: [id])
  additionalCategoryId  Int
  additionalCategory    AdditionalCategory @relation(fields: [additionalCategoryId], references: [id])
  
  @@unique([productId, additionalCategoryId])
}

model SaleItemAdditional {
  id           Int        @id @default(autoincrement())
  saleItemId   Int
  saleItem     SaleItem   @relation(fields: [saleItemId], references: [id])
  additionalId Int
  additional   Additional @relation(fields: [additionalId], references: [id])
  quantity     Int        @default(1)
  unitPrice    Decimal
}

// Configurações globais do sistema (single-tenant)
model Setting {
  id                Int      @id @default(autoincrement())
  recentSalesLimit  Int      @default(10)
  recentSalesEnabled Boolean  @default(true)
  darkMode          Boolean  @default(false)
  updatedAt         DateTime @updatedAt
}
